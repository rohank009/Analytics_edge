auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.data")?read.table
?read.table
read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
dir
read.table("D:/Analytics/Statistical_learning/Data/test.txt")
read.table("D:/Analytics/Statistical_learning/Data/test.txt")
auto=read.table("D:/Analytics/Statistical_learning/Data/test.txt")
str(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt")
fix(auto)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings="?")
fix(auto)
dim(auto)
auto[1,2]
auto[1,]
auto=na.omit(auto)
dim(auto)
names(auto)
plot(cylinders,mpg)
plot(auto$cylinders,auto$mpg)
attach(auto)
plot(auto$cylinders,auto$mpg)
plot(cylinders,mpg)
cylinders=as.factor(auto$cylinders)
cylinders
plot(cylinders,mpg)
plot(cylinders,mpg,col=blue)
plot(cylinders,mpg,col="blue")
plot(cylinders,mpg,col="green")
plot(cylinders,mpg,col="green",varwidth=T)
plot(cylinders,mpg,col="green",varwidth=T,horizontal=T)
plot(cylinders,mpg,col="green",varwidth=T,xlab="cylinders",ylab="mpg")
plot(cylinders,mpg,col="green",varwidth=T,xlab="cylinders",ylab="mpg",main="Auto")
hist(mpg)
hist(cylinders)
hist(auto$cylinders)
hist(auto$cylinders,col=1)
hist(auto$cylinders,col=3)
hist(auto$cylinders,col=3,breaks=5)
hist(auto$cylinders,col=3,breaks=15)
hist(auto$cylinders,col=3,breaks=5)
hist(auto$cylinders,col=3,breaks=15)
hist(auto$cylinders,col=3,breaks=25)
hist(auto$cylinders,col=3,breaks=45)
pairs(Auto)
pairs(auto)
pairs(∼ mpg + displacement + horsepower + weight +
acceleration , Auto)
pairs(∼ mpg + displacement + horsepower + weight +
acceleration , auto)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
summary(auto)
summary(cylinders)
summary(mpg)
rm(list=ls())
college=read.csv(D:/Analytics/Statistical_learning/Data/college.csv)
college=read.csv(D:\Analytics\Statistical_learning\Data\college.csv)
college=read.csv("D:\Analytics\Statistical_learning\Data\college.csv"")
college=read.csv("D:\Analytics\Statistical_learning\Data\college.csv")
college=read.csv("D:/Analytics/Statistical_learning/Data/college.csv")
fix(college)
rownames(college)=college[,1]
fix(college)
fix(college)
str(college)
college[1]
college[2,1]
college=read.csv("D:/Analytics/Statistical_learning/Data/college.csv")
college[2,1]
str(college)
college[1,]
rownames(college)
rownames(college)=college[,1]
college[1,]
fix(college)
college=college[,-1]
fix(college)
fix(college)
summary(college)
?pairs
pairs(college[,1:10])
pairs(college[,1:2])
pairs(college[,1:1])
pairs(college[,1])
?boxplot
?plot
plot(college$private,college$outstate)
plot(factor(college$private),college$outstate)
pripub=factor(college$private)
str(pripub)
pripub=as.factor(college$private)
str(pripub)
pripub=as.factor(college$Private)
plot(as.factor(college$Private),college$Outstate)
plot(as.factor(college$Private),college$Outstate,xlab="Private",ylab="Outstate", main="Provate VS Outstate")
plot(as.factor(college$Private),college$Outstate,xlab="Private",ylab="Outstate", main="Private VS Outstate")
Elite=rep("No",nrow(college))
str(Elite)
Elite[college$Top10perc>50]="Yes"
Elite=as.factor(Elite)
college=data.frame(college,Elite)
fix(college)
str(Elite)
summary(college)
plot(as.factor(college$Elite),college$Outstate,xlab="Elite",ylab="Outstate", main="Elite VS Outstate")
?hist
par(mfrow=c(2,2))
plot(as.factor(college$Elite),college$Outstate,xlab="Elite",ylab="Outstate", main="Elite VS Outstate")
hist(college$apps,college$accept)
hist(college$Apps,college$Accept)
hist(college$Apps,college$Accept,breaks=1000)
hist(college$Apps,college$Accept,breaks=10)
hist(college$Apps,college$Accept,breaks=2)
?hist
hist(college$Apps,college$Accept,breaks=1000)
par(mfrow=c(1,1))
hist(college$Apps,college$Accept,breaks=1000)
plot(college$Apps,college$Accept)
str(college)
hist(college$Grad.Rate)
plot(college$Elite,college$Grad.Rate)
summary(college$Grad.Rate)
plot(college$Apps,college$Accept)
plot(college$Accept,college$Enroll)
plot(college$Elite,(college$Room.Board)+(college$Books)+(college$Personal))
plot(college$Phd,college$Grad.Rate)
summary(colege$Phd)
summary(college$Phd)
plot(college$PhD,college$Grad.Rate)
plot(college$Terminal,college$Grad.Rate)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt")
str(auto)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings=?)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings="?")
str(auto)
range(mpg)
summary(auto)
range(weight)
mean(mpg)
sd(mpg)
sd(mpg[-10:85,])
sd(auto$mpg[-10:85,])
sd(auto$mpg[-(10:85),])
auto$mpg[10]
auto$mpg[-10:50]
auto$mpg[-10:50,]
savehistory()
auto$mpg[c(1:10,86:397),]
auto$mpg[c(1:10),]
auto$mpg[(1:10),]
auto$mpg[1:10,]
auto$mpg(1:10,)
auto$mpg[10,]
auto$mpg[(1:10)]
auto$mpg[-(10:85)]
auto$mpg[10]
summary(auto)
str(auto)
plot(mpg,cylinders)
plot(cylinders,mpg)
plot(displacement,mpg)
plot(horsepower,mpg)
plot(weight,mpg)
plot(acceleration,mpg)
plot(year,mpg)
plot(origin,mpg)
Boston
library(Mass)
library(MASS)
Boston
str(Boston)
?Boston
load(Boston)
fix(Boston)
pair(Boston$black,Boston$crim)
pairs(Boston$black,Boston$crim)
pairs(~Boston$black + Boston$crim)
summary(crim)
summary(Boston$crim)
summary(Boston$black)
savehistory()
str(Boston)
library(MASS)
str(Boston)
pairs(Boston)
?Boston
Boston[1,]
plot(Boston$zn,Boston$crim)
Boston[zn=0]
Boston(zn=0)
Boston[zn=0,]
Boston[Boston$zn=0,]
Boston[Boston$zn==0,]
str(Boston)
plot(Boston$zn,Boston$ptratio)
pairs(Boston$zn,Boston$crim)
pairs(~Boston$zn,Boston$crim)
pairs(~Boston$zn+Boston$crim)
pairs(~Boston$zn+Boston$ptratio)
pairs(~Boston$zn+Boston$tax)
pairs(~Boston$zn+Boston$chas)
savehistory()
quit
quit()
library(MASS)
str(Boston)
a=c[1,2,3,4]
a=c(1,2,3,4)
median(a)
med(Boston$ptratio)
median(Boston$ptratio)
summary(Boston$ptratio)
?Boston
summary(Boston$medv)
Boston[Boston$medv=min(Boston$medv)]
Boston[Boston$medv=min(Boston$medv),]
Boston[Boston$medv==min(Boston$medv),]
summary(Boston$lstat)
summary(Boston$black)
summary(Boston$tax)
summary(Boston$crim)
mean(a)
a=c(1,2,3,8,7)
mean(a)
median(a)
a=c(1,2,3,8,7,9)
mean(a)
median(a)
Boston[Boston$rm>7,]
count(Boston[Boston$rm>7,])
cnt(Boston[Boston$rm>7,])
nrow(Boston[Boston$rm>7,])
nrow(Boston[Boston$rm>8,])
(Boston[Boston$rm>8,])
summary(Boston$crim)
savehistory()
summary(Boston$crim)
library(MASS)
library(ISLR)
install.packages("ISLR")
?Boston
fix(Boston)
fix(Boston)
?fix
names(Boston)
?Boston
lm.fit=lm(med~lstat)
lm.fit=lm(med~lstat,data=Boston)
lm.fit=lm(medv~lstat,data=Boston)
lm.fit
summary(lm.fit)
lm.fit$coefficients
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
?Boston
Boston$lstat[1,1]
Boston$lstat[1]
predict(lm.fit,data.frame(lstat=c(5,10,15))),interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))),interval="confidence")
summary(boston?medv)
summary(Boston?medv)
summary(Boston$medv)
summary(Boston$lstat)
install.packages("ISLR")
plot(Boston$medv,Boston$lstat)
?Boston
plot(Boston$lstat,Boston$medv)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
plot(Boston$lstat,Boston$medv,col="red")
plot(Boston$lstat,Boston$medv,pch=20)
plot(Boston$lstat,Boston$medv,pch="+")
plot(Boston$lstat,Boston$medv,pch="*")
plot(Boston$lstat,Boston$medv,pch="R")
plot(Boston$lstat,Boston$medv,pch="/")
plot (1:20,1:20,pch=1:20)
par(mfrow=c(2,2))
plot(lm.fit)
plot(predict(lm.fit),residuals(lm.fit))
plot(predict(lm.fit),restudent(lm.fit))
plot(predict(lm.fit),rstudent(lm.fit))
plot(hatvalues(lm.fit))
which.max(plot(hatvalues(lm.fit)))
which.max(hatvalues(lm.fit))
21126909
8663166526
savehistory()
exit
quit
quit
quit()
library(MASS)
quit()
etf = "http://finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
library(XML)
etf.table= readHTMLTable(etf)
etf.table
str(etf.table)
etf = "finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
etf = "http://finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
u = "http://en.wikipedia.org/wiki/List_of_countries_by_population"
tables = readHTMLTable(u)
tables
names(tables)
tables[[2]]
tmp = tables[[2]]
tmp
airline = "http://www.theacsi.org/index.php?option=com_content&view=article&id=147&catid=&Itemid=212&i=Airlines"
airline.table = readHTMLTable(airline, header=T, which=1,stringsAsFactors=F)
View(airline.table)
airline.table = readHTMLTable(airline)
etf.table= readHTMLTable(etf,header=T,which=1,stringsAsFactors=F)
etf
tables = readHTMLTable(u,stringsAsFactors=F)
tables
etf.table= readHTMLTable(etf,stringsAsFactors=F)
etf.table
etf.table= readHTMLTable(etf,which=1,stringsAsFactors=F)
View(etf.table)
etf.table= readHTMLTable(etf,which=2,stringsAsFactors=F)
View(etf.table)
etf.table
install.packages("RCurl")
etf_return = "http://news.morningstar.com/etf/lists/ETFReturns.html?topNum=All&lastRecNum=100000&curField=8&category=0"
etf_return_raw.table = readHTMLTable(etf_return,which=3,stringsAsFactors=F)
funds_return ="http://news.morningstar.com/fund-category-returns"
funds_return_raw.table = readHTMLTable(funds_return,which=1,stringsAsFactors=F)
nr_etf=nrow(etf_return_raw.table) -1
nc_etf=ncol(etf_return_raw.table) -1
library("zoo")
library("fPortfolio")
library("PerformanceAnalytics")
setwd(D:/Analytics/Analytics_edge/Linear_Regression)
setwd("D:/Analytics/Analytics_edge/Linear_Regression")
wine=read.csv("wine.csv")
str(wine)
summary(wine)
model1=lm(Price ~ AGST , data=wine)
model1
str(model1)
summary(model1)
model1$Residuals
model1$residuals
SSE = sum(model1$residuals)
ss
sse
SSE
SSE = sum(model1$residuals^2)
SSE
model2=lm(Price ~ AGST+HarvestRain , data=wine)
summary(model2)
model2$residuals
SSE = sum(model2$residuals^2)
SSE
str(wine)
model3=lm(Price ~ AGST+HarvestRain+Year+WinterRain+Age+FrancePop , data=wine)
summary(model3)
SSE = sum(model3$residuals^2)
SSE
model4=lm(Price ~ HarvestRain+WinterRain , data=wine)
summary(model4)
SSE = sum(model4$residuals^2)
SSE
## adding all variables to the model
model3=lm(Price ~ AGST+HarvestRain+Year+WinterRain+Age+FrancePop , data=wine)
summary(model3)
model3$residuals
## calculating sum of squared errors
SSE = sum(model3$residuals^2)
model5=lm(Price ~ AGST+HarvestRain+Year+WinterRain+Age , data=wine)
summary(model5)
summary(wine)
model5=lm(Price ~ AGST+HarvestRain+Year+WinterRain+Age , data=wine)
summary(model5)
model5=lm(Price ~ AGST + HarvestRain + Year + WinterRain + Age, data=wine)
summary(model5)
View(wine)
model_test=lm(Price ~ Age, data=wine)
summary(model_test)
model_test=lm(Price ~ AGST + Age, data=wine)
summary(model_test)
model5=lm(Price ~ AGST + Age + HarvestRain + Year + WinterRain, data=wine)
summary(model5)
model5=lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model5)
model4=lm(Price ~ HarvestRain+WinterRain , data=wine)
summary(model4)
cor(wine$WinterRain,wine$Price)
cor(wine$FrancePop,wine$Age)
cor(wine)
model6=lm(Price ~ AGST + HarvestRain + WinterRain, data=wine)
summary(model6)
## Removing france population from the model
model5=lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model5)
wine_test=read.csv("wine_test.csv")
str(wine_test)
predict_test= predict(model5,newdata=winetest)
predict_test= predict(model5,newdata=wine_test)
predict_test
SSE=sum((wine_test$Price - predict_test)^2)
SSE
SST = sum((wine_test$Price - mean(wine$Price))^2)
SST
1-(SSE/SST)
## Linear Regression for Baseball in R Video
setwd("D:/Analytics/Analytics_edge/Linear_Regression")
baseball=read.csv("baseball.csv")
str(baseball)
summary(baseball)
moneyball = subset(baseball,Year < 2002)
str(moneyball)
moneyball$RD = moneyball$RS - moneyball$RA
str(moneyball)
plot(moneyball$RD , moneyball$W)
winsreg = lm(W ~ RD , data=moneyball)
summary(winsreg)
80.881375 + 0.105766(713 - 614)
80.881375 + 0.105766 * (713 - 614)
str(moneyball)
runsreg = lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(rnusreg)
summary(runsreg)
runsreg = lm(RS ~ OBP + SLG , data=moneyball)
summary(runsreg)
str(moneyball)
runsallreg = lm(RA ~ OOBP + OSLG , data=moneyball)
summary(runsallreg)
-804.63 + 2737.77 * (0.311) + 1584.91 * (0.405)
-837.38 + 2913.60 * (0.297) + 1514.29 * (0.370)
teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 = c(94,88,95,88,93,94,98,97,93,94)
cor(teamRank,wins2012)
cor(teamRank,wins2013)
wins2013 = c(97,97,92,93,92,96,94,96,92,90)
cor(teamRank,wins2013)
setwd("D:/Analytics/Analytics_edge/Linear_Regression\NBA")
setwd("D:/Analytics/Analytics_edge/Linear_Regression/NBA")
basketball=read.csv("NBA_train.csv")
str(basketball)
nba=read.csv("NBA_train.csv")
str(nba)
table(nba$Playoffs,nba$W)
table(nba$W,nba$Playoffs)
nba$ptsdiff=nba$PTS - nba$oppPTS
str(nba)
plot(nba$ptsdiff,nba$W)
winsreg = lm(W ~ ptsdiff, data=nba)
summary(winsreg)
(42 - 41) / 0.0326
str(nba)
pointsreg = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STLS , data=nba)
pointsreg = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL , data=nba)
pointsreg = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=nba)
summary(pointsreg)
SSE = sum(pointsreg$residuals^2)
SSE
RMSE = sqrt(SSE)/nrow(nba)
RMSE = sqrt(SSE)/nrow(nba) ## root mean squared error
RMSE
RMSE = sqrt(SSE/nrow(nba)) ## root mean squared error
RMSE
mean(nba$PTS)
summary(pointsreg)
pointsreg = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL + BLK, data=nba)
summary(pointsreg)
pointsreg2 = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + STL + BLK, data=nba)
summary(pointsreg2)
pointsreg3 = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL + BLK, data=nba)
summary(pointsreg3)
pointsreg4 = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + STL, data=nba)
summary(pointsreg4)
SSE = sum(pointsreg4$residuals^2) ## sum of squares
RMSE = sqrt(SSE/nrow(nba)) ## root mean squared error
SSE = sum(pointsreg$residuals^2) ## sum of squares
RMSE = sqrt(SSE/nrow(nba)) ## root mean squared error
SSE4 = sum(pointsreg4$residuals^2) ## sum of squares
RMSE4 = sqrt(SSE/nrow(nba)) ## root mean squared error
SSE
SSE4
RMSE
RMSE4
nba_test = ("NBA_test.csv")
str(nba_test)
nba_test = read.csv("NBA_test.csv")
str(nba_test)
pointsprediction = predict(pointsreg4 , newdata=nba_test)
pointsprediction
SSE = sum((pointsprediction - nba_test$PTS)^2)
SST = sum ((nba_test$PTS - mean(nba_test$PTS))^2)
r_sq = 1-(SSE/SST)
r_sq = 1-SSE/SST
SST = sum ((nba_test$PTS - mean(nba$PTS))^2)
r_sq = 1-SSE/SST
rmes = sqrt(SSE)/nrow(nba_test)
rmse = sqrt(SSE)/nrow(nba_test)
rmse = sqrt(SSE/nrow(nba_test)
rmse = sqrt(SSE/nrow(nba_test))
rmse
rmse = sqrt(SSE/nrow(nba_test))
rmse
