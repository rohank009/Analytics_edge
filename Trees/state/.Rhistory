}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if()
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if(clientrisk == "3")
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if (clientrisk == "3")
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
# else if (clientrisk == "2")
# {medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
#  medriskpfolio = pfolio[medindex,]
# }
else if (clientrisk == "3")
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if (clientrisk == "3")
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if (clientrisk == "3")
{
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
else if (clientrisk == "3")
{hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
switch(clientrisk,
1={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
2={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
3={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
},
{
print('default')
}
)
switch(clientrisk,
1={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
2={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
3={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
)
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
if (clientrisk == "3")
{hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else {
if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
}
else {
if (clientrisk == "3")
{hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
}
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else {
if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
}
switch(clientrisk,
1={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
} )
switch(clientrisk,
1={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
{
print("default")
}
)
if (clientrisk == "1")
{lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
}
else {
if (clientrisk == "2")
{medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
}
}
else {
if (clientrisk == "3")
{hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
}
switch(horizon,
1={
print('1')
},
2={
print('2')
},
3={
print('3')
},
{
print('default')
}
)
switch(horizon,
1={
print('1')
},
2={
print('2')
},
3={
print('3')
},
{
print('default')
}
switch(clientrisk,
1={
print('1')
},
2={
print('2')
},
3={
print('3')
},
{
print('default')
}
clientrisk
switch(clientrisk,
"1"={
print('1')
},
"2"={
print('2')
},
"3"={
print('3')
},
{
print('default')
}
)
switch(clientrisk,
"1"={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
"2"={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
"3"={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
)
frontier1 <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = "minW[1]=0.01 , minW[2]=0.02")
frontier1 <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = "c(minW[1]=0.01 , minW[2]=0.02)"
)
getWeights(frontier1)
minwts = c("minW[1]=0.01 , minW[2]=0.02 , minW[3]=0.05 , minW[4]=0.01 , minW[5]=0.015 , minW[6]=0.025 , minW[7]=0.02 , minW[8]=0.01")
frontier <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = minwts)
minwts
minwts = "c(minW[1]=0.01 , minW[2]=0.02 , minW[3]=0.05 , minW[4]=0.01 , minW[5]=0.015 , minW[6]=0.025 , minW[7]=0.02 , minW[8]=0.01)"
frontier <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = minwts)
assets=ncol(cat_ret)
#build efficient frontier graph
pdf("frontier.pdf")
tailoredFrontierPlot(object=frontier,mText="Mean-CVaR Frontier (Long only)",risk="CVaR",col=rainbow(assets));
dev.off()
tgtrisk=getTargetRisk(frontier)
tgtreturn=getTargetReturn(frontier)
weight=getWeights(frontier)
pfolio=data.frame(cbind(tgtrisk,tgtreturn,weight))
pfolio=pfolio[!pfolio$mean<0,]
tan_rt = getTargetReturn(tan.etl)
max_rt = max(pfolio$mean)
lo_rt = tan_rt + (max_rt - tan_rt)*0.5
med_rt = tan_rt + (max_rt - tan_rt)*0.7
hi_rt = tan_rt + (max_rt - tan_rt)*0.9
###---------------------preparing low , med and high risk frontier ---------------------
clientrisk = "1" ## 1 for low, 2 for medium and 3 for high
switch(clientrisk,
"1"={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
"2"={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
"3"={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
)
wts = as.vector(lowvalue[7:ncol(lowvalue)],mode="numeric")
lbls = colnames(lowvalue[7:ncol(lowvalue)])
slice = wts
wt_lbls=round(slice/sum(slice)*100)
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
##dev.off()
frontier <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = c("minW[1]=0.01" , "minW[2]=0.02" , "minW[3]=0.05" , "minW[4]=0.01" , "minW[5]=0.015" , "minW[6]=0.025" , "minW[7]=0.02" , "minW[8]=0.01"))
assets=ncol(cat_ret)
#build efficient frontier graph
pdf("frontier.pdf")
tailoredFrontierPlot(object=frontier,mText="Mean-CVaR Frontier (Long only)",risk="CVaR",col=rainbow(assets));
dev.off()
##pdf("weights.pdf")
##weightsPlot(frontier, labels = TRUE, col=rainbow(assets), title = TRUE, mtext = TRUE, box = TRUE, legend = TRUE, ...)
##dev.off()
tgtrisk=getTargetRisk(frontier)
tgtreturn=getTargetReturn(frontier)
weight=getWeights(frontier)
pfolio=data.frame(cbind(tgtrisk,tgtreturn,weight))
pfolio=pfolio[!pfolio$mean<0,]
tan_rt = getTargetReturn(tan.etl)
max_rt = max(pfolio$mean)
lo_rt = tan_rt + (max_rt - tan_rt)*0.5
med_rt = tan_rt + (max_rt - tan_rt)*0.7
hi_rt = tan_rt + (max_rt - tan_rt)*0.9
###---------------------preparing low , med and high risk frontier ---------------------
clientrisk = "1" ## 1 for low, 2 for medium and 3 for high
switch(clientrisk,
"1"={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
"2"={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
"3"={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
)
wts = as.vector(lowvalue[7:ncol(lowvalue)],mode="numeric")
lbls = colnames(lowvalue[7:ncol(lowvalue)])
slice = wts
wt_lbls=round(slice/sum(slice)*100)
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
minW[1:ncol(cat_ret)] = c(0.01,0.02,0.025,0.01,0.015,0.025,0.02,0.01)
cons = c("minW[1:ncol(cat_ret)] = c(0.01,0.02,0.025,0.01,0.015,0.025,0.02,0.01)")
frontier <- portfolioFrontier(data = cat.ret.ts, spec = frontierSpec,constraints = cons )
assets=ncol(cat_ret)
#build efficient frontier graph
pdf("frontier.pdf")
tailoredFrontierPlot(object=frontier,mText="Mean-CVaR Frontier (Long only)",risk="CVaR",col=rainbow(assets));
dev.off()
##pdf("weights.pdf")
##weightsPlot(frontier, labels = TRUE, col=rainbow(assets), title = TRUE, mtext = TRUE, box = TRUE, legend = TRUE, ...)
##dev.off()
tgtrisk=getTargetRisk(frontier)
tgtreturn=getTargetReturn(frontier)
weight=getWeights(frontier)
pfolio=data.frame(cbind(tgtrisk,tgtreturn,weight))
pfolio=pfolio[!pfolio$mean<0,]
tan_rt = getTargetReturn(tan.etl)
max_rt = max(pfolio$mean)
lo_rt = tan_rt + (max_rt - tan_rt)*0.5
med_rt = tan_rt + (max_rt - tan_rt)*0.7
hi_rt = tan_rt + (max_rt - tan_rt)*0.9
###---------------------preparing low , med and high risk frontier ---------------------
clientrisk = "1" ## 1 for low, 2 for medium and 3 for high
switch(clientrisk,
"1"={
lowindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= lo_rt)]))
lowriskpfolio = pfolio[lowindex,]
},
"2"={
medindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= med_rt)]))
medriskpfolio = pfolio[medindex,]
},
"3"={
hiindex = which(pfolio$mean == min(pfolio$mean[(pfolio$mean >= hi_rt)]))
hiriskpfolio = pfolio[hiindex,]
}
)
wts = as.vector(lowvalue[7:ncol(lowvalue)],mode="numeric")
lbls = colnames(lowvalue[7:ncol(lowvalue)])
slice = wts
wt_lbls=round(slice/sum(slice)*100)
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
wts
lowriskpfolio
wts = as.vector(lowriskpfolio[7:ncol(lowvalue)],mode="numeric")
lbls = colnames(lowriskpfolio[7:ncol(lowvalue)])
slice = wts
wt_lbls=round(slice/sum(slice)*100)
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
wts = as.vector(lowriskpfolio[7:ncol(lowvalue)],mode="numeric")
lbls = colnames(lowriskpfolio[7:ncol(lowvalue)])
slice = wts
wt_lbls=slice/sum(slice)*100
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
corpus_dis = wts * clientcorpus
clientcorpus = 1000000
corpus_dist = wts * clientcorpus
corpus_dist
colnames(corpus_dist) = lbls
names(corpus_dist) = lbls
corpus_dist
lowriskpfolio
(lowriskpfolio$mean + 1)^365
((lowriskpfolio$mean + 1)^365)-1
annual_return = (((lowriskpfolio$mean + 1)^365)-1)*100
annual_return = paste(annual_return,"%",sep="")
annual_return
round(0.0764,2)
annual_return = round((((lowriskpfolio$mean + 1)^365)-1)*100,2)
annual_return = paste(annual_return,"%",sep="")
annual_return
switch(horizon ,
S={
annual_return = round((((lowriskpfolio$mean + 1)^365)-1)*100,2)
},
M={
annual_return = round((((lowriskpfolio$mean + 1)^52.14)-1)*100,2)
},
L={
annual_return = round((((lowriskpfolio$mean + 1)^12)-1)*100,2)
}
)
annual_return = paste(annual_return,"%",sep="")
annual_return
setwd("D:/Analytics/Analytics_edge/trees/state")
state = read.csv("statedataSimple.csv")
str(state)
linm = lm(Life.Exp ~ .,data=state)
summary(linm)
predictlinm = predict(linm)
SSE = sum((linm$Life.Exp - predictlinm)^2)
SSE
predictlinm
SSE = sum((state$Life.Exp - predictlinm)^2)
SSE
linm1 = lm(Life.Exp ~ . - Income ,data=state)
summary(linm1)
linm1 = lm(Life.Exp ~ Population + Murder + Frost + HS.Grad  ,data=state)
summary(linm1)
predictlinm1 = predict(linm1)
SSE = sum((state$Life.Exp - predictlinm1)^2)
SSE
weights_ann_return =function(clientrisk,risk_pfolio)
{
if (clientrisk == "3")  ## for high client risk
{
pfolio = risk_pfolio
}
wts = as.vector(pfolio[7:ncol(pfolio)],mode="numeric")
lbls = colnames(pfolio[7:ncol(pfolio)])
slice = wts
wt_lbls=slice/sum(slice)*100
wt_lbls = paste(wt_lbls,"%",sep="")
##pdf("weightsPie.pdf")
pie(slice, labels=wt_lbls , main = "Weights Plot",col=rainbow(assets),cex=0.8)
legend(1,1.3, lbls , cex=0.5, fill=rainbow(assets))
corpus_dist = wts * clientcorpus
names(corpus_dist) = lbls
switch(horizon ,
S={
annual_return = round((((pfolio$mean + 1)^365)-1)*100,2)
},
M={
annual_return = round((((pfolio$mean + 1)^52.14)-1)*100,2)
},
L={
annual_return = round((((pfolio$mean + 1)^12)-1)*100,2)
}
)
annual_return = paste(annual_return,"%",sep="")
}
quit()
