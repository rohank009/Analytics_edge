ls()
rm(x)
rm(list=ls())
x=matrix(data=c(1,2,3,4),nrow=2,ncol=2)
x
sqrt(x)
x^2
rnorm(10)
a=list(1:5,"test")
a
a[1]
a[[1]]
a[[1,1]]
a[[1]]
y=x+rnorm(10,mean=10,sd=.1)
y
x
x=rnorm(10)
y=x+rnorm(10,mean=10,sd=.1)
y
cor(x,y)
?cor
x
cor(1,2)
cor(12,2)
a=2
b=1
cor(a,b)
a=c(2)
b=c(1)
cor(a,b)
a=c(2,3)
b=c(1,4)
cor(a,b)
b=c(6,4)
cor(a,b)
b=c(16,4)
cor(a,b)
set.seed(1)
rnorm(5)
rnorm(7)
rnorm(5)
set.seed(5)
rnorm(5)
rnorm(5)
set.seed(5)
rnorm(5)
t=c(1:5)
mean(t)
t=c(1:6)
mean(t)
var(t)
sqrt(var(t))
sd(t)
x=rnorm(50)
y=rnorm(50)
plot(x,y)
plot(x,y,xlab="xaxis",ylab="yaxis")
plot(x,y,xlab="x-axis",ylab="y-axis")
plot(x,y,xlab="x-axis",ylab="y-axis",main="plot of X and Y")
plot(x,y,xlab="x-axis",ylab="y-axis",main="plot of X and Y",col="green")
plot(x,y,xlab="x-axis",ylab="y-axis",main="plot of X and Y",col="blue")
plot(x,y,xlab="x-axis",ylab="y-axis",main="plot of X and Y",col="orange")
plot(x,y,xlab="x-axis",ylab="y-axis",main="plot of X and Y",col="yellow")
y=x
y
x
?outer
a=outer(x,y)
a
str(a)
dim(a)
f=outer(x,y,function(x,y) cos(y)/(1+x^2))
f[1]
f[1,1]
f[1:3]
str(f)
f=outer(x,y,function(x,y) cos(y)/(1+x^2))g=outer(x,y,1)
g=outer(x,y,1)
contour(x,y,f)
f=outer(x,y,function(x,y) cos(y)/(1+x^2))
contour(x,y,f)
x=seq(1:10)
y=x
f=outer(x,y,function(x,y) cos(y)/(1+x^2))
f
contour(x,y,f)
contour(x,y,f,nlevels=45)
contour(x,y,f,nlevels=45,add=T)
contour(x,y,f,nlevels=45)
fa=(f-t(f))/2
contour(x,y,fa,nlevels=45)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=45)
persp(x,y,fa,theta=90)
persp(x,y,fa,theta=0)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=0)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=40)
persp(x,y,fa,theta=30,phi=70)
auto=read.table("D:\Analytics\Statistical_learning\Data\Auto.data")
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
load("D:/Analytics/Statistical_learning/Data")
load("D:/Analytics/Statistical_learning/Data/Auto.data")
load("D:/Analytics/Statistical_learning/Data/test")
load("D:/Analytics/Statistical_learning/Data/test.txt")
load("D:/Analytics/Statistical_learning/Data/test.txt")
load("D:/Analytics/Statistical_learning/Data/test.txt")
auto=read.table("Auto.data")
load("D:/Analytics/Statistical_learning/Data/Auto.data")
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.data")?read.table
?read.table
read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
read.table("D:/Analytics/Statistical_learning/Data/Auto.data")
dir
read.table("D:/Analytics/Statistical_learning/Data/test.txt")
read.table("D:/Analytics/Statistical_learning/Data/test.txt")
auto=read.table("D:/Analytics/Statistical_learning/Data/test.txt")
str(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt")
fix(auto)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings="?")
fix(auto)
dim(auto)
auto[1,2]
auto[1,]
auto=na.omit(auto)
dim(auto)
names(auto)
plot(cylinders,mpg)
plot(auto$cylinders,auto$mpg)
attach(auto)
plot(auto$cylinders,auto$mpg)
plot(cylinders,mpg)
cylinders=as.factor(auto$cylinders)
cylinders
plot(cylinders,mpg)
plot(cylinders,mpg,col=blue)
plot(cylinders,mpg,col="blue")
plot(cylinders,mpg,col="green")
plot(cylinders,mpg,col="green",varwidth=T)
plot(cylinders,mpg,col="green",varwidth=T,horizontal=T)
plot(cylinders,mpg,col="green",varwidth=T,xlab="cylinders",ylab="mpg")
plot(cylinders,mpg,col="green",varwidth=T,xlab="cylinders",ylab="mpg",main="Auto")
hist(mpg)
hist(cylinders)
hist(auto$cylinders)
hist(auto$cylinders,col=1)
hist(auto$cylinders,col=3)
hist(auto$cylinders,col=3,breaks=5)
hist(auto$cylinders,col=3,breaks=15)
hist(auto$cylinders,col=3,breaks=5)
hist(auto$cylinders,col=3,breaks=15)
hist(auto$cylinders,col=3,breaks=25)
hist(auto$cylinders,col=3,breaks=45)
pairs(Auto)
pairs(auto)
pairs(∼ mpg + displacement + horsepower + weight +
acceleration , Auto)
pairs(∼ mpg + displacement + horsepower + weight +
acceleration , auto)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
summary(auto)
summary(cylinders)
summary(mpg)
rm(list=ls())
college=read.csv(D:/Analytics/Statistical_learning/Data/college.csv)
college=read.csv(D:\Analytics\Statistical_learning\Data\college.csv)
college=read.csv("D:\Analytics\Statistical_learning\Data\college.csv"")
college=read.csv("D:\Analytics\Statistical_learning\Data\college.csv")
college=read.csv("D:/Analytics/Statistical_learning/Data/college.csv")
fix(college)
rownames(college)=college[,1]
fix(college)
fix(college)
str(college)
college[1]
college[2,1]
college=read.csv("D:/Analytics/Statistical_learning/Data/college.csv")
college[2,1]
str(college)
college[1,]
rownames(college)
rownames(college)=college[,1]
college[1,]
fix(college)
college=college[,-1]
fix(college)
fix(college)
summary(college)
?pairs
pairs(college[,1:10])
pairs(college[,1:2])
pairs(college[,1:1])
pairs(college[,1])
?boxplot
?plot
plot(college$private,college$outstate)
plot(factor(college$private),college$outstate)
pripub=factor(college$private)
str(pripub)
pripub=as.factor(college$private)
str(pripub)
pripub=as.factor(college$Private)
plot(as.factor(college$Private),college$Outstate)
plot(as.factor(college$Private),college$Outstate,xlab="Private",ylab="Outstate", main="Provate VS Outstate")
plot(as.factor(college$Private),college$Outstate,xlab="Private",ylab="Outstate", main="Private VS Outstate")
Elite=rep("No",nrow(college))
str(Elite)
Elite[college$Top10perc>50]="Yes"
Elite=as.factor(Elite)
college=data.frame(college,Elite)
fix(college)
str(Elite)
summary(college)
plot(as.factor(college$Elite),college$Outstate,xlab="Elite",ylab="Outstate", main="Elite VS Outstate")
?hist
par(mfrow=c(2,2))
plot(as.factor(college$Elite),college$Outstate,xlab="Elite",ylab="Outstate", main="Elite VS Outstate")
hist(college$apps,college$accept)
hist(college$Apps,college$Accept)
hist(college$Apps,college$Accept,breaks=1000)
hist(college$Apps,college$Accept,breaks=10)
hist(college$Apps,college$Accept,breaks=2)
?hist
hist(college$Apps,college$Accept,breaks=1000)
par(mfrow=c(1,1))
hist(college$Apps,college$Accept,breaks=1000)
plot(college$Apps,college$Accept)
str(college)
hist(college$Grad.Rate)
plot(college$Elite,college$Grad.Rate)
summary(college$Grad.Rate)
plot(college$Apps,college$Accept)
plot(college$Accept,college$Enroll)
plot(college$Elite,(college$Room.Board)+(college$Books)+(college$Personal))
plot(college$Phd,college$Grad.Rate)
summary(colege$Phd)
summary(college$Phd)
plot(college$PhD,college$Grad.Rate)
plot(college$Terminal,college$Grad.Rate)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt")
str(auto)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T)
fix(auto)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings=?)
auto=read.table("D:/Analytics/Statistical_learning/Data/Auto.txt",header=T,na.strings="?")
str(auto)
range(mpg)
summary(auto)
range(weight)
mean(mpg)
sd(mpg)
sd(mpg[-10:85,])
sd(auto$mpg[-10:85,])
sd(auto$mpg[-(10:85),])
auto$mpg[10]
auto$mpg[-10:50]
auto$mpg[-10:50,]
savehistory()
auto$mpg[c(1:10,86:397),]
auto$mpg[c(1:10),]
auto$mpg[(1:10),]
auto$mpg[1:10,]
auto$mpg(1:10,)
auto$mpg[10,]
auto$mpg[(1:10)]
auto$mpg[-(10:85)]
auto$mpg[10]
summary(auto)
str(auto)
plot(mpg,cylinders)
plot(cylinders,mpg)
plot(displacement,mpg)
plot(horsepower,mpg)
plot(weight,mpg)
plot(acceleration,mpg)
plot(year,mpg)
plot(origin,mpg)
Boston
library(Mass)
library(MASS)
Boston
str(Boston)
?Boston
load(Boston)
fix(Boston)
pair(Boston$black,Boston$crim)
pairs(Boston$black,Boston$crim)
pairs(~Boston$black + Boston$crim)
summary(crim)
summary(Boston$crim)
summary(Boston$black)
savehistory()
str(Boston)
library(MASS)
str(Boston)
pairs(Boston)
?Boston
Boston[1,]
plot(Boston$zn,Boston$crim)
Boston[zn=0]
Boston(zn=0)
Boston[zn=0,]
Boston[Boston$zn=0,]
Boston[Boston$zn==0,]
str(Boston)
plot(Boston$zn,Boston$ptratio)
pairs(Boston$zn,Boston$crim)
pairs(~Boston$zn,Boston$crim)
pairs(~Boston$zn+Boston$crim)
pairs(~Boston$zn+Boston$ptratio)
pairs(~Boston$zn+Boston$tax)
pairs(~Boston$zn+Boston$chas)
savehistory()
quit
quit()
library(MASS)
str(Boston)
a=c[1,2,3,4]
a=c(1,2,3,4)
median(a)
med(Boston$ptratio)
median(Boston$ptratio)
summary(Boston$ptratio)
?Boston
summary(Boston$medv)
Boston[Boston$medv=min(Boston$medv)]
Boston[Boston$medv=min(Boston$medv),]
Boston[Boston$medv==min(Boston$medv),]
summary(Boston$lstat)
summary(Boston$black)
summary(Boston$tax)
summary(Boston$crim)
mean(a)
a=c(1,2,3,8,7)
mean(a)
median(a)
a=c(1,2,3,8,7,9)
mean(a)
median(a)
Boston[Boston$rm>7,]
count(Boston[Boston$rm>7,])
cnt(Boston[Boston$rm>7,])
nrow(Boston[Boston$rm>7,])
nrow(Boston[Boston$rm>8,])
(Boston[Boston$rm>8,])
summary(Boston$crim)
savehistory()
summary(Boston$crim)
library(MASS)
library(ISLR)
install.packages("ISLR")
?Boston
fix(Boston)
fix(Boston)
?fix
names(Boston)
?Boston
lm.fit=lm(med~lstat)
lm.fit=lm(med~lstat,data=Boston)
lm.fit=lm(medv~lstat,data=Boston)
lm.fit
summary(lm.fit)
lm.fit$coefficients
names(lm.fit)
coef(lm.fit)
confint(lm.fit)
?Boston
Boston$lstat[1,1]
Boston$lstat[1]
predict(lm.fit,data.frame(lstat=c(5,10,15))),interval="confidence")
predict(lm.fit,data.frame(lstat=(c(5,10,15))),interval="confidence")
summary(boston?medv)
summary(Boston?medv)
summary(Boston$medv)
summary(Boston$lstat)
install.packages("ISLR")
plot(Boston$medv,Boston$lstat)
?Boston
plot(Boston$lstat,Boston$medv)
abline(lm.fit)
abline(lm.fit,lwd=3)
abline(lm.fit,lwd=3,col="red")
plot(Boston$lstat,Boston$medv,col="red")
plot(Boston$lstat,Boston$medv,pch=20)
plot(Boston$lstat,Boston$medv,pch="+")
plot(Boston$lstat,Boston$medv,pch="*")
plot(Boston$lstat,Boston$medv,pch="R")
plot(Boston$lstat,Boston$medv,pch="/")
plot (1:20,1:20,pch=1:20)
par(mfrow=c(2,2))
plot(lm.fit)
plot(predict(lm.fit),residuals(lm.fit))
plot(predict(lm.fit),restudent(lm.fit))
plot(predict(lm.fit),rstudent(lm.fit))
plot(hatvalues(lm.fit))
which.max(plot(hatvalues(lm.fit)))
which.max(hatvalues(lm.fit))
21126909
8663166526
savehistory()
exit
quit
quit
quit()
library(MASS)
quit()
etf = "http://finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
library(XML)
etf.table= readHTMLTable(etf)
etf.table
str(etf.table)
etf = "finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
etf = "http://finance.yahoo.com/etf/lists/category/"
etf.table= readHTMLTable(etf)
u = "http://en.wikipedia.org/wiki/List_of_countries_by_population"
tables = readHTMLTable(u)
tables
names(tables)
tables[[2]]
tmp = tables[[2]]
tmp
airline = "http://www.theacsi.org/index.php?option=com_content&view=article&id=147&catid=&Itemid=212&i=Airlines"
airline.table = readHTMLTable(airline, header=T, which=1,stringsAsFactors=F)
View(airline.table)
airline.table = readHTMLTable(airline)
etf.table= readHTMLTable(etf,header=T,which=1,stringsAsFactors=F)
etf
tables = readHTMLTable(u,stringsAsFactors=F)
tables
etf.table= readHTMLTable(etf,stringsAsFactors=F)
etf.table
etf.table= readHTMLTable(etf,which=1,stringsAsFactors=F)
View(etf.table)
etf.table= readHTMLTable(etf,which=2,stringsAsFactors=F)
View(etf.table)
etf.table
install.packages("RCurl")
etf_return = "http://news.morningstar.com/etf/lists/ETFReturns.html?topNum=All&lastRecNum=100000&curField=8&category=0"
etf_return_raw.table = readHTMLTable(etf_return,which=3,stringsAsFactors=F)
funds_return ="http://news.morningstar.com/fund-category-returns"
funds_return_raw.table = readHTMLTable(funds_return,which=1,stringsAsFactors=F)
nr_etf=nrow(etf_return_raw.table) -1
nc_etf=ncol(etf_return_raw.table) -1
library("zoo")
library("fPortfolio")
library("PerformanceAnalytics")
?maxreturnPortfolio
??maxreturnPortfolio
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('D:/Analytics/R-code/portfolio_optimization_prediction/CG_CVAR_portman.R')
quit()
quit()
## Kos
rm(list=ls())
library(flexclust)
library(caret)
setwd("D:/Analytics/Analytics_edge/clustering/airlines")
airlines = read.csv("AirlinesCluster.csv", header = TRUE)
str(airlines)
summary(airlines)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc , airlines)
## running hierarchical clustering algorithm
distance = dist(airlinesNorm , method = "euclidean")
airlinesclust = hclust(distance , method = "ward.D")
plot(airlinesclust)
airlinesclusters = cutree(airlinesclust , k=5)
airlinehierclusters = split(airlinesNorm , airlinesclusters)
length(airlinehierclusters[[1]])
length(airlinehierclusters[[2]])
length(airlinehierclusters[[3]])
length(airlinehierclusters[[6]])
str(airlinesNorm)
airlinesclusters1 = subset(airlinesNorm ,  airlinesclusters == 1)
str(airlinesclusters1)
table(airlinesclusters)
str(airlinehierclusters)
tapply(airlines$Balance , airlinesclusters , mean)
str(airlines)
tapply(airlines$Balance , airlinesclusters , mean)
tapply(airlines$QualMiles , airlinesclusters , mean)
tapply(airlines$BonusMiles , airlinesclusters , mean)
tapply(airlines$BonusTrans , airlinesclusters , mean)
tapply(airlines$FlightMiles , airlinesclusters , mean)
tapply(airlines$FlightTrans , airlinesclusters , mean)
tapply(airlines$DaysSinceEnroll , airlinesclusters , mean)
lapply(split(airlines, airlinesclusters), colMeans)
lapply(split(airlinesNorm, airlinesclusters), colMeans)
k = 5
set.seed(1000)
kmc = kmeans(airlinesNorm , centers = k)
str(kmc)
kHierCluster = split(airlinesNorm , kmc$cluster)
str(kHierCluster)
kmc$centers
quit()
